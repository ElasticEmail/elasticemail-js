/**
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ElasticEmail);
  }
}(this, function(expect, ElasticEmail) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ElasticEmail.SuppressionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SuppressionsApi', function() {
    describe('suppressionsBouncesGet', function() {
      it('should call suppressionsBouncesGet successfully', function(done) {
        //uncomment below and update the code to test suppressionsBouncesGet
        //instance.suppressionsBouncesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsBouncesImportPost', function() {
      it('should call suppressionsBouncesImportPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsBouncesImportPost
        //instance.suppressionsBouncesImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsBouncesPost', function() {
      it('should call suppressionsBouncesPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsBouncesPost
        //instance.suppressionsBouncesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsByEmailDelete', function() {
      it('should call suppressionsByEmailDelete successfully', function(done) {
        //uncomment below and update the code to test suppressionsByEmailDelete
        //instance.suppressionsByEmailDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsByEmailGet', function() {
      it('should call suppressionsByEmailGet successfully', function(done) {
        //uncomment below and update the code to test suppressionsByEmailGet
        //instance.suppressionsByEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsComplaintsGet', function() {
      it('should call suppressionsComplaintsGet successfully', function(done) {
        //uncomment below and update the code to test suppressionsComplaintsGet
        //instance.suppressionsComplaintsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsComplaintsImportPost', function() {
      it('should call suppressionsComplaintsImportPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsComplaintsImportPost
        //instance.suppressionsComplaintsImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsComplaintsPost', function() {
      it('should call suppressionsComplaintsPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsComplaintsPost
        //instance.suppressionsComplaintsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsGet', function() {
      it('should call suppressionsGet successfully', function(done) {
        //uncomment below and update the code to test suppressionsGet
        //instance.suppressionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsUnsubscribesGet', function() {
      it('should call suppressionsUnsubscribesGet successfully', function(done) {
        //uncomment below and update the code to test suppressionsUnsubscribesGet
        //instance.suppressionsUnsubscribesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsUnsubscribesImportPost', function() {
      it('should call suppressionsUnsubscribesImportPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsUnsubscribesImportPost
        //instance.suppressionsUnsubscribesImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppressionsUnsubscribesPost', function() {
      it('should call suppressionsUnsubscribesPost successfully', function(done) {
        //uncomment below and update the code to test suppressionsUnsubscribesPost
        //instance.suppressionsUnsubscribesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
